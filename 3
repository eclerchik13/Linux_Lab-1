### Подготовка

Изучите команды `find`, `xargs`, и `grep` с помощью команды `man`.

### Задания

Используя команду `find`:

1. Найдите все файлы и каталоги, имя которых содержит слово `pass`, поиск начните с корневого каталога.  
`find / -name "*pass*"`
1. Найдите все файлы и каталоги, имя которых содержит слово `pass` без учёта регистра, поиск начните с корневого каталога.
`find / -iname "*pass*"`
1. Найдите все файлы и каталоги, имя которых содержит слово `pass`, ограничив глубину поиска одним каталогом, поиск начните с корневого каталога.
`find / -maxdepth 2 -name "*pass*"`
1. Найдите все файлы и каталоги, имена которых оканчиваются на `.bin`. Поиск необходимо выполнить в каталоге `/home`.  
`find /home -name "*.bin"`
1. Найдите все **файлы** (и только файлы) с расширением `bak` и удалите их.
`find / -type f -name "*.bin" -delete`
1. Найдите все **файлы** (и только файлы) с расширениями `txt` и `sh`.
`find / -type f -name "*.txt" -o -name "*.sh"`
1. Найдите все **файлы** (и только файлы) в текущем каталоге и выведите **только** имя файла (без каталога), владельца, группу владельца, количество жёстких ссылок на этот файл и его размер в байтах.
`find / -maxdepth 1 -type f -exec ls -l {} \;`
1. Найдите все пустые **каталоги** в текущем каталоге.
`find -maxdepth 1 -type d -empty`
1. Найдите все пустые **каталоги** в текущем каталоге и удалите их.
`find -maxdepth 1 -type d -empty -delete`
1. Найдите и удалите все пустые **файлы** (и только файлы).
`find / -type f -empty -delete`
1. Найдите все **файлы** (и только файлы) в текущем каталоге, на которые есть хотя бы одна жёсткая ссылка.
`find / -maxdepth 1 -type f -links +1`
1. Найдите файлы и каталоги в каталоге `/etc`, **не** принадлежащие пользователю `root`.
`find /etc \! -user root`
1. Найдите все **файлы** (и только файлы), у которых **нет** расширения `sh`.
`find / -type f \! -name "*.sh"`
1. Найдите все **файлы** (и только файлы), у которых количество жёстких ссылок более двух.
`find / -type f -links +2`
1. Найдите все **файлы** (и только файлы) в каталоге `/usr/bin`, последний доступ к которым осуществлялся более трёх месяцев назад.
`find /usr/bin -type f -atime +90`
1. Найдите все **файлы** (и только файлы) в каталогах `/usr/bin` и `/usr/share`, созданные или изменённые в течении последних 10 дней.
`find /usr/share /usr/bin -type f -mtime -10`
1. Найдите и удалите все **файлы** (и только файлы) в каталоге `/tmp`, которые не менялись более двух недель.
`find /tmp -type f -mtime +14 -delete`
1. Найдите все **файлы** (и только файлы) в каталоге `/usr/bin` с установленным флагом suid/sgid.
`find /usr/bin -type f -perm -04000 -o -perm -02000`

Используя команды `find` и `xargs` или параметр `-exec` команды `find`:

1. Найдите все **файлы** (и только файлы) с расширением `txt` и подсчитайте количество строк во всех этих файлах.
`find / -type f -name "*.txt" | xargs wc -l `
1. Найдите все **файлы** (и только файлы) с расширением `sh` и добавьтем им право на исполнение.
`find / -type f -name "*.sh" | xargs chmod ugo+x`
1. Найдите все **файлы** (и только файлы) с расширением `conf` в каталоге `/etc` и подсчитайте их суммарный размер, используя команду du.
`find /etc -type f -name "*.conf" | xargs du -sh`

Используя команду `grep`:

1. Из файла `/var/log/messages` вывести строки, содержащие ключевое слово `ERROR`, без учёта регистра.
`grep -i "error" /var/log/messages` (или grep -wi "error" /var/log/messages если слово - это символы, а справа и слева - пробелы) 
1. Из файла `/var/log/messages` вывести **количество** строк, **не** содержащих ключевое слово `ERROR`, без учёта регистра.
`grep -vci "error" /var/log/message`
1. Из файла `/var/log/messages` вывести строки, содержащие **только слово `ERROR` целиком**, с учётом регистра.
`grep -w "ERROR" /var/log/message`
1. Найти во всех файлах из текущего каталога и вложенных подкаталогов строки, содержащие шаблон `#!bin/bash`.
`grep -r "#!bin/bash" /`
1. Изменить предыдущую команду таким образом, чтобы она выводила дополнительные 10 строк после каждого найденного шаблона.
`grep -rA 10 @#!bin/bash" /`
